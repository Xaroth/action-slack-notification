name: CI Tests

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test: [format, lint, unit, build]
    permissions:
      checks: write
      pull-requests: write
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Send slack notification
        # We add this if to ensure this doesn't run on forks, or when working on a pull request.
        # If you really want to run this on your own fork, configure the required secrets.
        if: env.SLACK_BOT_TOKEN && env.SLACK_CHANNEL_ID && github.event_name != 'pull_request'
        continue-on-error: true
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        uses: ./
        with:
          slack-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get yarn cache dir
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Fetch the yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile

      - name: Run tests
        if: github.event_name != 'pull_request' || matrix.test != 'unit'
        run: yarn test:${{ matrix.test }}

      - name: Report on PR
        if: github.event_name == 'pull_request' && matrix.test == 'unit'
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          test-script: yarn test:${{ matrix.test }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
